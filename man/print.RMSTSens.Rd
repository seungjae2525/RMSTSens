% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/print.RMSTSens.R
\name{print.RMSTSens}
\alias{print.RMSTSens}
\title{Print for \code{RMSTSens} objects}
\usage{
\method{print}{RMSTSens}(x, digits = max(1L, getOption("digits") - 3L), ...)
}
\arguments{
\item{x}{An object for class \code{RMSTSens}. Either object \code{RMSTSens} or \code{RMSTSens.ci} is allowed.
If you want to see the results of several \code{RMSTSens} objects together, use the \code{RMSTSens.merge} function. See \code{RMSTSens.merge}.}

\item{digits}{Print digits. Default: max(1L, getOption("digits") - 3L).}

\item{...}{Further arguments (currently not used).}
}
\description{
Print the sensitivity analysis results for object of class \code{RMSTSens}.
}
\details{
Print the sensitivity analysis results for object (\code{RMSTSens} or \code{RMSTSens.ci}) of class \code{RMSTSens}.
}
\examples{
dat <- gbsg
dat$size2 <- ifelse(dat$size <= 20, 0,
                    ifelse(dat$size > 20 & dat$size <= 50, 1, 2))
dat$age2 <- dat$age/100
dat$er2 <- dat$er/1000

## Estimation of propensity score
denom.fit <- glm(hormon~(age2)^3+(age2)^3*log(age2)+meno+factor(size2)+sqrt(nodes)+er2,
                 data=dat, family=binomial(link="logit"))
dat$Ps <- predict(denom.fit, type="response")

## Performing the sensitivity analysis - sensitivity range
# Using direct optimization method
results.optim <- RMSTSens(time="rfstime", status="status", exposure="hormon",
                          level.exposed="1", ps="Ps", data=dat, methods="Optim",
                          use.multicore=TRUE, n.core=2,
                          lambda=1.5, tau=365.25*5, ini.par=1, verbose=FALSE)
print(results.optim)

# Using approximate optimization method
results.approx <- RMSTSens(time="rfstime", status="status", exposure="hormon",
                           level.exposed="1", ps="Ps", data=dat, methods="Approx",
                           use.multicore=TRUE, n.core=2,
                           lambda=1.5, tau=365.25*5, ini.par=1, verbose=FALSE)
print(results.approx)

## Performing the sensitivity analysis - sensitivity range with multiple lambda
# Using approximate optimization method
results.approx2 <- RMSTSens(time="rfstime", status="status", exposure="hormon",
                            level.exposed="1", ps="Ps", data=dat, methods="Approx",
                            use.multicore=TRUE, n.core=2,
                            lambda=c(1,1.5), tau=365.25*5, ini.par=1, verbose=FALSE)
print(results.approx2)

# Percentile bootstrap CI for population sensitivity range
re.ap.boot <- RMSTSens.ci(x=results.approx2,
              B=50, # Set B=50 to reduce computation time for R checks
              level=0.95, seed=220524,
              formula=hormon~(age2)^3+(age2)^3*log(age2)+meno+factor(size2)+sqrt(nodes)+er2,
              model="logistic", use.multicore=TRUE, n.core=2)
print(re.ap.boot)

}
\seealso{
\code{\link[RMSTSens]{RMSTSens}}, \code{\link[RMSTSens]{RMSTSens.ci}}, \code{\link[RMSTSens]{RMSTSens.merge}}
}
\keyword{print}
